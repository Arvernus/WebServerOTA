#
# Build a Image on GitHub
#
name: Release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  release:
    types: [published, edited, unpublished, deleted]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          wget https://github.com/xxxajk/spi4teensy3/archive/master.zip -O /tmp/spi4teensy3.zip
          unzip /tmp/spi4teensy3.zip -d /tmp

      - name: Get Version
        id: GetVersion
        run: |
          echo "VERSION=`git describe --tags`" >> $GITHUB_ENV
          git describe --tags

      - name: Run PlatformIO
        run: |
          mkdir -p $HOME/.pio/build
          pio ci --build-dir=$HOME/.pio/build --keep-build-dir --lib="." --lib="/tmp/spi4teensy3-master" --board=d1_mini --project-option="build_flags = -DVERSION=${{ env.VERSION }}"
        env:
          PLATFORMIO_CI_SRC: src/main.cpp

      - name: List Files
        id: ListFiles
        run: |
          pwd
          env
          ls -al
          cd ..
          ls -al
          cd ..
          ls -al
          cd ..
          ls -al
          cd ..
          ls -al
          echo "--------"
          pwd
          find . -name "d1_mini" -print

      - name: Deploy FirmWare on Update-Server
#        uses: Arvernus/action-arvernus-release-update@master
        uses: andreaswagner42/action-arvernus-release-update@master
        with:
          package-type: "Firmware"
          package-file-name: "${{github.workspace}}/.pio/build/d1_mini/firmware.bin"
          server-secret-key: ${{ secrets.SERVER_SECRET_KEY }}
          github-access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}